#!/bin/sh
# https://github.com/jacklul/entware-pi-hole/
#shellcheck disable=SC2034,SC1091

ENABLED=yes
PROCS=pihole-FTL
ARGS=""
PREARGS=""
DESC=$PROCS
PATH=/opt/sbin:/opt/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

logecho() {
    logger "$@"
    echo "$@"
}

case $1 in
    start | restart)
        # Make sure gravity database exists
        PI_HOLE_GRAVITYDB_FILE="$(pihole-FTL --config -q files.gravity)"
        if [ -n "$PI_HOLE_GRAVITYDB_FILE" ] && [ ! -f "$PI_HOLE_GRAVITYDB_FILE" ]; then
            logecho "Creating gravity database $PI_HOLE_GRAVITYDB_FILE..."
            pihole -g || exit 1
        fi

        # Attempt to start using setcap and su or as 'pihole' user
        if [ -z "$ARGS" ] && [ -z "$PREARGS" ]; then
            ROOT_USER="$(id -nu 0 2> /dev/null)"

            if [ -n "$ROOT_USER" ]; then # if this is empty then this can indicate absence of 'id' command
                if [ "$(id -u pihole 2> /dev/null)" != "" ]; then
                    TARGET_USER="pihole"

                    if [ -f /opt/sbin/setcap ] && [ -f /opt/bin/su ]; then
                        if setcap CAP_NET_BIND_SERVICE,CAP_NET_RAW,CAP_NET_ADMIN,CAP_SYS_NICE,CAP_IPC_LOCK,CAP_CHOWN+eip "/opt/sbin/pihole-FTL"; then
                            TARGET_USER=""
                            PREARGS="su -s sh -c"
                            ARGS="pihole"
                        fi
                    fi

                    if [ -n "$TARGET_USER" ]; then # setcap not supported - start as root user but then change to pihole
                        ARGS="-- -u $TARGET_USER"
                        logecho "Starting pihole-FTL as '$ROOT_USER' (then dropping to '$TARGET_USER') because setting capabilities is not supported on this system"
                    fi
                else # start as root user
                    ARGS="-- -u $ROOT_USER"
                    logecho "Starting pihole-FTL as '$TARGET_USER' because 'pihole' user does not exist"
                fi
            fi
        fi
    ;;
esac

# Execute pre start script through rc.func's PRECMD, we have to run poststop here as well for potential cleanup
if [ -z "$PRECMD" ]; then
    PRECMD="bash /opt/share/pihole/pihole-FTL-poststop.sh ; bash /opt/share/pihole/pihole-FTL-prestart.sh"
fi

. /opt/etc/init.d/rc.func

case $1 in
    start | restart)
        if [ "$(id -u pihole 2> /dev/null)" != "" ]; then
            # This fixes permission issue for queries database's journal
            PI_HOLE_QUERIESDB_FILE="$(pihole-FTL --config -q files.database)"
            if [ -n "$PI_HOLE_QUERIESDB_FILE" ]; then
                { sleep 5; chown pihole:pihole "$PI_HOLE_QUERIESDB_FILE-"*; } > /dev/null 2>&1 &
            fi
        fi
    ;;
    stop | kill)
        # Run poststop after stop/kill
        bash /opt/share/pihole/pihole-FTL-poststop.sh
    ;;
esac
