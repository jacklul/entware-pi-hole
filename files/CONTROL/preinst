#!/bin/sh

# Prioritize /opt binaries
PATH="/opt/sbin:/opt/bin:$PATH"

# Some of these commands might be missing depending on the system
# so we check if they exist and then prompt the user to install them
# These were not added to package dependencies as they should be included
# in busybox on most systems and their usage is not version dependent
command_deps="" # Format: command or command:package
coreutils_deps="basename cat chmod chown cp date df dirname echo false head kill ln mkdir mv pwd rm tail test touch true uptime"

command_exists() {
    _command=$1

    if [ -z "$_check_command" ]; then
        type 2> /dev/null && _check_command="type"
        which --help > /dev/null 2>&1 && _check_command="which"
        whereis --help > /dev/null 2>&1 && _check_command="whereis"

        if [ -z "$_check_command" ]; then
            echo "Unable to check for missing dependencies - 'type', 'which' or 'whereis' command is required!"
            exit 1
        fi
    fi

    case $_check_command in
        "type")
            if [ -n "$(type "$_command" 2>/dev/null | awk '{print $3}')" ]; then
                return 0
            fi
        ;;
        "which")
            if [ -n "$(which "$_command" 2>/dev/null)" ]; then
                return 0
            fi
        ;;
        "whereis")
            if [ -n "$(whereis -b "$_command" | cut -d ' ' -f2)" ]; then
                return 0
            fi
        ;;
        *)
            echo "Unable to check for missing dependencies - 'type', 'which' or 'whereis' command is required!"
            exit 1
    esac

    return 1
}

##########

missing_commands=""
missing_packages=""

for command in $command_deps; do
    if echo "$command" | grep -q ":"; then
        package="$(echo "$command" | cut -d ':' -f 2 2> /dev/null)"
        command="$(echo "$command" | cut -d ':' -f 1 2> /dev/null)"

        echo "$command" | grep -q ":" && continue # no 'cut' command?
    else
        package="$command"
    fi

    #shellcheck disable=SC2086
    if ! command_exists $command; then
        missing_commands="$missing_commands $command"
        missing_packages="$missing_packages $package"
    fi
done

for command in $coreutils_deps; do
    #shellcheck disable=SC2086
    if ! command_exists $command; then
        missing_commands="$missing_commands $command"
        missing_packages="$missing_packages coreutils-$command"
    fi
done

if [ -n "$missing_commands" ]; then
    missing_commands="$(echo "$missing_commands" | awk '{$1=$1};1')"
    missing_packages="$(echo "$missing_packages" | awk '{$1=$1};1')"

    cat <<EOT
Your system is missing required commands: $missing_commands

Install them by running the following command:
 opkg install $missing_packages

EOT

    exit 1
fi

exit 0
