#!/bin/sh

# Prioritize /opt binaries
PATH="/opt/sbin:/opt/bin:$PATH"

# Some of these commands might be missing depending on the system
# so we check if they exist and then prompt the user to install them
#COMMAND_DEPS="" # Format: command or command:package
COREUTILS_DEPS="basename cat chmod chown cp date df dirname echo false head kill ln ls mkdir mv pwd rm tail test touch true uptime"

command_exists() {
    _COMMAND=$1

    if [ -z "$CHECK_COMMAND" ]; then
        type 2> /dev/null && CHECK_COMMAND="type"
        which --help > /dev/null 2>&1 && CHECK_COMMAND="which"
        whereis --help > /dev/null 2>&1 && CHECK_COMMAND="whereis"

        if [ -z "$CHECK_COMMAND" ]; then
            echo "Unable to check for missing dependencies - 'type', 'which' or 'whereis' command is required!"
            exit 1
        fi
    fi

    case $CHECK_COMMAND in
        type)
            if [ -n "$(type "$_COMMAND" 2>/dev/null | awk '{print $3}')" ]; then
                return 0
            fi
        ;;
        which)
            if [ -n "$(which "$_COMMAND" 2>/dev/null)" ]; then
                return 0
            fi
        ;;
        whereis)
            if [ -n "$(whereis -b "$_COMMAND" | cut -d ' ' -f2)" ]; then
                return 0
            fi
        ;;
        *)
            echo "Unable to check for missing dependencies - 'type', 'which' or 'whereis' command is required!"
            exit 1
    esac

    return 1
}

##########

MISSING_CMDS=""
MISSING_PKGS=""

for COMMAND in $COMMAND_DEPS; do
    if echo "$COMMAND" | grep -q ":"; then
        PACKAGE="$(echo "$COMMAND" | cut -d ':' -f 2 2> /dev/null)"
        COMMAND="$(echo "$COMMAND" | cut -d ':' -f 1 2> /dev/null)"

        echo "$COMMAND" | grep -q ":" && continue # no 'cut' command?
    else
        PACKAGE="$COMMAND"
    fi

    #shellcheck disable=SC2086
    if ! command_exists $COMMAND; then
        MISSING_CMDS="$MISSING_CMDS $COMMAND"
        MISSING_PKGS="$MISSING_PKGS $PACKAGE"
    fi
done

for COMMAND in $COREUTILS_DEPS; do
    #shellcheck disable=SC2086
    if ! command_exists $COMMAND; then
        MISSING_CMDS="$MISSING_CMDS $COMMAND"
        MISSING_PKGS="$MISSING_PKGS coreutils-$COMMAND"
    fi
done

if [ -n "$MISSING_CMDS" ]; then
    MISSING_CMDS="$(echo "$MISSING_CMDS" | awk '{$1=$1};1')"
    MISSING_PKGS="$(echo "$MISSING_PKGS" | awk '{$1=$1};1')"

    cat <<EOT
Your system is missing required commands: $MISSING_CMDS

Install them by running the following command:
 opkg install $MISSING_PKGS

EOT

    exit 1
fi

exit 0
