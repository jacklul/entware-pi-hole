name: Cache and restore files

inputs:
  key_prefix:
    required: true
  patches_prefix:
    required: true
  ref:
    required: false
  files:
    required: false
    default: |
      ./stage/*
      !./stage/.git
  git_path:
    required: false
    default: ./stage

outputs:
  cache-hit:
    value: ${{ steps.cache-check.outputs.cache-hit }}

runs:
  using: composite

  steps:
    - name: Create hashes and set variables
      id: hashes
      shell: bash
      run: |
        if [ "${{ inputs.ref }}" != "develop" ] && ([[ "$GITHUB_REF" == refs/tags/* ]] || [ "$GITHUB_REF" == "refs/heads/master" ]; ); then
          GIT_TAG=$(git -C "${{ inputs.git_path }}" describe --tags --abbrev=0 2> /dev/null || echo "")
        fi
        echo "GIT_BRANCH=$([ -n "$GIT_TAG" ] && echo "master" || git -C "${{ inputs.git_path }}" rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
        echo "GIT_HASH=$(git -C "${{ inputs.git_path }}" rev-parse HEAD | cut -c1-8)" >> $GITHUB_OUTPUT
        CHECKSUM_PATCHES="$(find ./patches/ -type f \( -name '${{ inputs.patches_prefix }}-*.patch' -o -name '${{ inputs.patches_prefix }}-*.sh' \) -print0 | xargs -0 sha1sum 2> /dev/null)"
        CHECKSUM_CHECKS="$(find ./checks/ -type f -name '${{ inputs.patches_prefix }}-*.sh' -print0 | xargs -0 sha1sum 2> /dev/null)"
        #CHECKSUM_SCRIPTS="$(find  ./scripts/ ./.github/ -type f -name '*.sh' -print0 | xargs -0 sha1sum 2> /dev/null)"
        #CHECKSUM_WORKFLOWS="$(find ./.github/workflows/ ./.github/actions/ -type f -name '*.yml' -print0 | xargs -0 sha1sum 2> /dev/null)"
        CHECKSUM="$CHECKSUM_PATCHES\n$CHECKSUM_CHECKS"
        echo -e "$CHECKSUM"
        echo "HASHES=$(echo -e "$CHECKSUM" | sha1sum | cut -c1-8)" >> $GITHUB_OUTPUT
        cat $GITHUB_OUTPUT

    - name: Build cache key
      id: key
      shell: bash
      run: echo "CACHE_KEY=${{ inputs.key_prefix }}${{ steps.hashes.outputs.GIT_BRANCH }}-${{ steps.hashes.outputs.GIT_HASH }}-${{ steps.hashes.outputs.HASHES }}" >> $GITHUB_OUTPUT

    - name: Check if cache already exists
      id: cache-check
      uses: actions/cache/restore@v4
      with:
        key: ${{ steps.key.outputs.CACHE_KEY }}
        path: ${{ inputs.files }}
        lookup-only: true

    - name: Clean up directory before restoring
      if: steps.cache-check.outputs.cache-hit == 'true'
      working-directory: ${{ inputs.git_path }}
      shell: bash
      run: find . -mindepth 1 -maxdepth 1 ! -name '.git' -exec rm -fr {} \;

    - name: Cache files
      uses: actions/cache@v4
      with:
        key: ${{ steps.key.outputs.CACHE_KEY }}
        path: ${{ inputs.files }}
