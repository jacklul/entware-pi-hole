name: Build, Test and Extract FTL binary

inputs:
  platform:
    required: true
  git_branch:
    required: false
    default: ''
  git_tag:
    required: false
    default: ''
  context:
    required: false
    default: ./stage
  dockerfile:
    required: false
    default: ./stage/.github/Dockerfile
  build_opts:
    required: false
    default: ''
  run_tests:
    required: false
    default: true
  extract_binary:
    required: false
    default: true

runs:
  using: composite

  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build FTL
      uses: nick-fields/retry@v3
      id: build
      with:
        max_attempts: 3
        timeout_minutes: 15
        command: |
          docker buildx build \
            --platform ${{ inputs.platform }} \
            --pull \
            --load \
            --build-arg "CI_ARCH=${{ inputs.platform }}" \
            --build-arg "GIT_BRANCH=${{ inputs.git_branch }}" \
            --build-arg "GIT_TAG=${{ inputs.git_tag }}" \
            --build-arg "BUILD_OPTS=${{ inputs.build_opts }}" \
            --tag ftl-builder:local \
            --file "${{ inputs.dockerfile }}" "${{ inputs.context }}"

    - name: Test FTL
      uses: nick-fields/retry@v3
      if: inputs.run_tests == 'true' && steps.build.outcome == 'success'
      with:
        max_attempts: 3
        timeout_minutes: 15
        command: |
          cd "${{ inputs.context }}"
          docker run --rm \
            --platform ${{ inputs.platform }} \
            --env CI_ARCH=${{ inputs.platform }} \
            --env BUILD_OPTS=${{ inputs.build_opts }} \
            --env STATIC=true \
            ftl-builder:local \
            /bin/bash -c "test/arch_test.sh && test/run.sh"

    - name: Extract FTL binary
      if: inputs.extract_binary == 'true' && steps.build.outcome == 'success'
      working-directory: ${{ inputs.context }}
      shell: bash
      run: |
        docker create --platform ${{ inputs.platform }} --name temp-container ftl-builder:local
        docker cp temp-container:/pihole-FTL ./pihole-FTL
        docker rm temp-container
