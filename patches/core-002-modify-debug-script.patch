diff --git a/advanced/Scripts/piholeDebug.sh b/advanced/Scripts/piholeDebug.sh
index 7c558127..2501022e 100755
--- a/advanced/Scripts/piholeDebug.sh
+++ b/advanced/Scripts/piholeDebug.sh
@@ -520,7 +520,13 @@ disk_usage() {
 parse_locale() {
     local pihole_locale
     echo_current_diagnostic "Locale"
-    pihole_locale="$(locale)"
+    if [ -f "$(command -v locale)" ]; then
+        pihole_locale="$(locale)"
+    elif [ -f "$(command -v locale.new)" ]; then
+        pihole_locale="$(locale.new)"
+    else
+        pihole_locale="No locale command found"
+    fi
     parse_file "${pihole_locale}"
 }
 
@@ -1248,7 +1254,7 @@ spinner(){
             else
                 printf "\r${_spin:_i++%${#_spin}:1} %02d:%02d:%02d" $((_elapsed/3600)) $(((_elapsed/60)%60)) $((_elapsed%60)) >"$(tty)"
             fi
-            sleep 0.25
+            sleep 1
         done
 
         # Return to the begin of the line after completion (the spinner will be overwritten)
@@ -1296,7 +1302,7 @@ upload_to_tricorder() {
     local username="pihole"
     # Set the permissions and owner
     chmod 640 ${PIHOLE_DEBUG_LOG}
-    chown "$USER":"${username}" ${PIHOLE_DEBUG_LOG}
+    chown "$USER":"${username}" ${PIHOLE_DEBUG_LOG} 2> /dev/null
 
     # Let the user know debugging is complete with something strikingly visual
     log_write ""
@@ -1320,7 +1326,8 @@ upload_to_tricorder() {
             echo ""
             # give the user a choice of uploading it or not
             # Users can review the log file locally (or the output of the script since they are the same) and try to self-diagnose their problem
-            read -r -p "[?] Would you like to upload the log? [y/N] " response
+            #read -r -p "[?] Would you like to upload the log? [y/N] " response
+            response=n
             case ${response} in
                 # If they say yes, run our function for uploading the log
                 [yY][eE][sS]|[yY]) curl_to_tricorder;;
@@ -1359,6 +1366,8 @@ upload_to_tricorder() {
     log_write "   * A local copy of the debug log can be found at: ${COL_CYAN}${PIHOLE_DEBUG_LOG}${COL_NC}\\n"
 }
 
+bash /opt/share/pihole/dependencies.sh "check" || exit 1
+
 # Run through all the functions we made
 make_temporary_log
 initialize_debug
