diff --git a/advanced/Scripts/database_migration/gravity-db.sh b/advanced/Scripts/database_migration/gravity-db.sh
index e99f1df..1de3117 100755
--- a/advanced/Scripts/database_migration/gravity-db.sh
+++ b/advanced/Scripts/database_migration/gravity-db.sh
@@ -10,7 +10,7 @@
 # This file is copyright under the latest version of the EUPL.
 # Please see LICENSE file for your rights under this license.
 
-readonly scriptPath="/etc/.pihole/advanced/Scripts/database_migration/gravity"
+readonly scriptPath="/opt/share/pihole/database_migration/gravity"
 
 upgrade_gravityDB(){
     local database piholeDir auditFile version
diff --git a/advanced/Scripts/list.sh b/advanced/Scripts/list.sh
index 76558e5..a9592bf 100755
--- a/advanced/Scripts/list.sh
+++ b/advanced/Scripts/list.sh
@@ -11,7 +11,7 @@
 # Please see LICENSE file for your rights under this license.
 
 # Globals
-piholeDir="/etc/pihole"
+piholeDir="/opt/etc/pihole"
 GRAVITYDB="${piholeDir}/gravity.db"
 # Source pihole-FTL from install script
 pihole_FTL="${piholeDir}/pihole-FTL.conf"
@@ -37,7 +37,7 @@ declare -i domaincount
 domaincount=0
 reload=false
 
-colfile="/opt/pihole/COL_TABLE"
+colfile="/opt/share/pihole/COL_TABLE"
 source ${colfile}
 
 # IDs are hard-wired to domain interpretation in the gravity database scheme
diff --git a/advanced/Scripts/pihole-reenable.sh b/advanced/Scripts/pihole-reenable.sh
index 93ec3b9..eef9543 100755
--- a/advanced/Scripts/pihole-reenable.sh
+++ b/advanced/Scripts/pihole-reenable.sh
@@ -17,7 +17,7 @@
 # This ensures that pihole ends up in the correct state after a sequence of
 # commands suchs as: `pihole disable 30s; pihole enable; pihole disable`
 
-readonly PI_HOLE_BIN_DIR="/usr/local/bin"
+readonly PI_HOLE_BIN_DIR="/opt/bin"
 
 sleep "${1}"
 "${PI_HOLE_BIN_DIR}"/pihole enable
diff --git a/advanced/Scripts/piholeARPTable.sh b/advanced/Scripts/piholeARPTable.sh
index b92dd12..e7ce36b 100755
--- a/advanced/Scripts/piholeARPTable.sh
+++ b/advanced/Scripts/piholeARPTable.sh
@@ -10,7 +10,7 @@
 # This file is copyright under the latest version of the EUPL.
 # Please see LICENSE file for your rights under this license.
 
-coltable="/opt/pihole/COL_TABLE"
+coltable="/opt/share/pihole/COL_TABLE"
 if [[ -f ${coltable} ]]; then
     source ${coltable}
 fi
@@ -20,13 +20,13 @@ fi
 # Constructed to return nothing when
 # a) the setting is not present in the config file, or
 # b) the setting is commented out (e.g. "#DBFILE=...")
-FTLconf="/etc/pihole/pihole-FTL.conf"
+FTLconf="/opt/etc/pihole/pihole-FTL.conf"
 if [ -e "$FTLconf" ]; then
     DBFILE="$(sed -n -e 's/^\s*DBFILE\s*=\s*//p' ${FTLconf})"
 fi
 # Test for empty string. Use standard path in this case.
 if [ -z "$DBFILE" ]; then
-    DBFILE="/etc/pihole/pihole-FTL.db"
+    DBFILE="/opt/etc/pihole/pihole-FTL.db"
 fi
 
 
diff --git a/advanced/Scripts/piholeCheckout.sh b/advanced/Scripts/piholeCheckout.sh
index 41fd860..6c4226d 100755
--- a/advanced/Scripts/piholeCheckout.sh
+++ b/advanced/Scripts/piholeCheckout.sh
@@ -8,7 +8,7 @@
 # This file is copyright under the latest version of the EUPL.
 # Please see LICENSE file for your rights under this license.
 
-readonly PI_HOLE_FILES_DIR="/etc/.pihole"
+readonly PI_HOLE_FILES_DIR="/opt/etc/.pihole"
 SKIP_INSTALL="true"
 source "${PI_HOLE_FILES_DIR}/automated install/basic-install.sh"
 
@@ -88,8 +88,8 @@ checkout() {
 
         local path
         path="development/${binary}"
-        echo "development" > /etc/pihole/ftlbranch
-        chmod 644 /etc/pihole/ftlbranch
+        echo "development" > /opt/etc/pihole/ftlbranch
+        chmod 644 /opt/etc/pihole/ftlbranch
     elif [[ "${1}" == "master" ]] ; then
         # Shortcut to check out master branches
         echo -e "  ${INFO} Shortcut \"master\" detected - checking out master branches..."
@@ -100,8 +100,8 @@ checkout() {
         #echo -e "  ${TICK} Web Interface"
         local path
         path="master/${binary}"
-        echo "master" > /etc/pihole/ftlbranch
-        chmod 644 /etc/pihole/ftlbranch
+        echo "master" > /opt/etc/pihole/ftlbranch
+        chmod 644 /opt/etc/pihole/ftlbranch
     elif [[ "${1}" == "core" ]] ; then
         str="Fetching branches from ${piholeGitUrl}"
         echo -ne "  ${INFO} $str"
@@ -157,7 +157,7 @@ checkout() {
         fi
         checkout_pull_branch "${webInterfaceDir}" "${2}"
         # Update local and remote versions via updatechecker
-        /opt/pihole/updatecheck.sh
+        /opt/share/pihole/updatecheck.sh
     elif [[ "${1}" == "ftl" ]] ; then
         local path
         local oldbranch
@@ -168,14 +168,14 @@ checkout() {
         local ret=$?
         if [ $ret -eq 0 ]; then
             echo "  ${TICK} Branch ${2} exists"
-            echo "${2}" > /etc/pihole/ftlbranch
-            chmod 644 /etc/pihole/ftlbranch
+            echo "${2}" > /opt/etc/pihole/ftlbranch
+            chmod 644 /opt/etc/pihole/ftlbranch
             echo -e "  ${INFO} Switching to branch: \"${2}\" from \"${oldbranch}\""
             FTLinstall "${binary}"
             restart_service pihole-FTL
             enable_service pihole-FTL
             # Update local and remote versions via updatechecker
-            /opt/pihole/updatecheck.sh
+            /opt/share/pihole/updatecheck.sh
         else
             if [[ $ret -eq 1 ]]; then
                 echo "  ${CROSS} Requested branch \"${2}\" is not available"
diff --git a/advanced/Scripts/piholeDebug.sh b/advanced/Scripts/piholeDebug.sh
index 7c55812..d2942f0 100755
--- a/advanced/Scripts/piholeDebug.sh
+++ b/advanced/Scripts/piholeDebug.sh
@@ -22,7 +22,7 @@ set -o pipefail
 ######## GLOBAL VARS ########
 # These variables would normally be next to the other files
 # but we need them to be first in order to get the colors needed for the script output
-PIHOLE_SCRIPTS_DIRECTORY="/opt/pihole"
+PIHOLE_SCRIPTS_DIRECTORY="/opt/share/pihole"
 PIHOLE_COLTABLE_FILE="${PIHOLE_SCRIPTS_DIRECTORY}/COL_TABLE"
 
 # These provide the colors we need for making the log more readable
@@ -42,7 +42,7 @@ else
 fi
 
 # shellcheck disable=SC1091
-. /etc/pihole/versions
+. /opt/etc/pihole/versions
 
 # FAQ URLs for use in showing the debug log
 FAQ_HARDWARE_REQUIREMENTS="${COL_CYAN}https://docs.pi-hole.net/main/prerequisites/${COL_NC}"
@@ -55,18 +55,18 @@ FORUMS_URL="${COL_CYAN}https://discourse.pi-hole.net${COL_NC}"
 
 # Directories required by Pi-hole
 # https://discourse.pi-hole.net/t/what-files-does-pi-hole-use/1684
-CORE_GIT_DIRECTORY="/etc/.pihole"
-CRON_D_DIRECTORY="/etc/cron.d"
-DNSMASQ_D_DIRECTORY="/etc/dnsmasq.d"
-PIHOLE_DIRECTORY="/etc/pihole"
-PIHOLE_SCRIPTS_DIRECTORY="/opt/pihole"
-BIN_DIRECTORY="/usr/local/bin"
-RUN_DIRECTORY="/run"
-LOG_DIRECTORY="/var/log/pihole"
-HTML_DIRECTORY="/var/www/html"
+CORE_GIT_DIRECTORY="/opt/etc/.pihole"
+CRON_D_DIRECTORY="/opt/etc/cron.d"
+DNSMASQ_D_DIRECTORY="/opt/etc/dnsmasq.d"
+PIHOLE_DIRECTORY="/opt/etc/pihole"
+PIHOLE_SCRIPTS_DIRECTORY="/opt/share/pihole"
+BIN_DIRECTORY="/opt/sbin"
+RUN_DIRECTORY="/opt/run"
+LOG_DIRECTORY="/opt/var/log/pihole"
+HTML_DIRECTORY="/opt/share/pihole/www"
 WEB_GIT_DIRECTORY="${HTML_DIRECTORY}/admin"
 SHM_DIRECTORY="/dev/shm"
-ETC="/etc"
+ETC="/opt/etc"
 
 # Files required by Pi-hole
 # https://discourse.pi-hole.net/t/what-files-does-pi-hole-use/1684
@@ -139,7 +139,7 @@ show_disclaimer(){
 
 make_temporary_log() {
     # Create a random temporary file for the log
-    TEMPLOG=$(mktemp /tmp/pihole_temp.XXXXXX)
+    TEMPLOG=$(mktemp /opt/tmp/pihole_temp.XXXXXX)
     # Open handle 3 for templog
     # https://stackoverflow.com/questions/18460186/writing-outputs-to-log-file-and-console
     exec 3>"$TEMPLOG"
diff --git a/advanced/Scripts/piholeLogFlush.sh b/advanced/Scripts/piholeLogFlush.sh
index 4d97fec..10ad82b 100755
--- a/advanced/Scripts/piholeLogFlush.sh
+++ b/advanced/Scripts/piholeLogFlush.sh
@@ -8,58 +8,58 @@
 # This file is copyright under the latest version of the EUPL.
 # Please see LICENSE file for your rights under this license.
 
-colfile="/opt/pihole/COL_TABLE"
+colfile="/opt/share/pihole/COL_TABLE"
 source ${colfile}
 
 # In case we're running at the same time as a system logrotate, use a
 # separate logrotate state file to prevent stepping on each other's
 # toes.
-STATEFILE="/var/lib/logrotate/pihole"
+STATEFILE="/opt/etc/pihole/logrotate.state"
 
 # Determine database location
 # Obtain DBFILE=... setting from pihole-FTL.db
 # Constructed to return nothing when
 # a) the setting is not present in the config file, or
 # b) the setting is commented out (e.g. "#DBFILE=...")
-FTLconf="/etc/pihole/pihole-FTL.conf"
+FTLconf="/opt/etc/pihole/pihole-FTL.conf"
 if [ -e "$FTLconf" ]; then
     DBFILE="$(sed -n -e 's/^\s*DBFILE\s*=\s*//p' ${FTLconf})"
 fi
 # Test for empty string. Use standard path in this case.
 if [ -z "$DBFILE" ]; then
-    DBFILE="/etc/pihole/pihole-FTL.db"
+    DBFILE="/opt/etc/pihole/pihole-FTL.db"
 fi
 
 if [[ "$*" != *"quiet"* ]]; then
-    echo -ne "  ${INFO} Flushing /var/log/pihole/pihole.log ..."
+    echo -ne "  ${INFO} Flushing /opt/var/log/pihole/pihole.log ..."
 fi
 if [[ "$*" == *"once"* ]]; then
     # Nightly logrotation
-    if command -v /usr/sbin/logrotate >/dev/null; then
+    if command -v /opt/sbin/logrotate >/dev/null; then
         # Logrotate once
-        /usr/sbin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate
+        /opt/sbin/logrotate --force --state "${STATEFILE}" /opt/etc/pihole/logrotate
     else
         # Copy pihole.log over to pihole.log.1
         # and empty out pihole.log
         # Note that moving the file is not an option, as
         # dnsmasq would happily continue writing into the
         # moved file (it will have the same file handler)
-        cp -p /var/log/pihole/pihole.log /var/log/pihole/pihole.log.1
-        echo " " > /var/log/pihole/pihole.log
-        chmod 640 /var/log/pihole/pihole.log
+        cp -p /opt/var/log/pihole/pihole.log /opt/var/log/pihole/pihole.log.1
+        echo " " > /opt/var/log/pihole/pihole.log
+        chmod 640 /opt/var/log/pihole/pihole.log
     fi
 else
     # Manual flushing
-    if command -v /usr/sbin/logrotate >/dev/null; then
+    if command -v /opt/sbin/logrotate >/dev/null; then
         # Logrotate twice to move all data out of sight of FTL
-        /usr/sbin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate; sleep 3
-        /usr/sbin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate
+        /opt/sbin/logrotate --force --state "${STATEFILE}" /opt/etc/pihole/logrotate; sleep 3
+        /opt/sbin/logrotate --force --state "${STATEFILE}" /opt/etc/pihole/logrotate
     else
         # Flush both pihole.log and pihole.log.1 (if existing)
-        echo " " > /var/log/pihole/pihole.log
-        if [ -f /var/log/pihole/pihole.log.1 ]; then
-            echo " " > /var/log/pihole/pihole.log.1
-            chmod 640 /var/log/pihole/pihole.log.1
+        echo " " > /opt/var/log/pihole/pihole.log
+        if [ -f /opt/var/log/pihole/pihole.log.1 ]; then
+            echo " " > /opt/var/log/pihole/pihole.log.1
+            chmod 640 /opt/var/log/pihole/pihole.log.1
         fi
     fi
     # Delete most recent 24 hours from FTL's database, leave even older data intact (don't wipe out all history)
@@ -70,6 +70,6 @@ else
 fi
 
 if [[ "$*" != *"quiet"* ]]; then
-    echo -e "${OVER}  ${TICK} Flushed /var/log/pihole/pihole.log"
+    echo -e "${OVER}  ${TICK} Flushed /opt/var/log/pihole/pihole.log"
     echo -e "  ${TICK} Deleted ${deleted} queries from database"
 fi
diff --git a/advanced/Scripts/query.sh b/advanced/Scripts/query.sh
index 493c75e..01a4d9c 100755
--- a/advanced/Scripts/query.sh
+++ b/advanced/Scripts/query.sh
@@ -15,13 +15,13 @@
 # Please see LICENSE file for your rights under this license.
 
 # Globals
-PI_HOLE_INSTALL_DIR="/opt/pihole"
+PI_HOLE_INSTALL_DIR="/opt/share/pihole"
 max_results="20"
 partial="false"
 domain=""
 
 # Source color table
-colfile="/opt/pihole/COL_TABLE"
+colfile="/opt/share/pihole/COL_TABLE"
 . "${colfile}"
 
 # Source api functions
diff --git a/advanced/Scripts/update.sh b/advanced/Scripts/update.sh
index 8a35ef2..23ddf69 100755
--- a/advanced/Scripts/update.sh
+++ b/advanced/Scripts/update.sh
@@ -12,9 +12,9 @@
 
 # Variables
 readonly ADMIN_INTERFACE_GIT_URL="https://github.com/pi-hole/web.git"
-readonly ADMIN_INTERFACE_DIR="/var/www/html/admin"
+readonly ADMIN_INTERFACE_DIR="/opt/share/pihole/www/admin"
 readonly PI_HOLE_GIT_URL="https://github.com/pi-hole/pi-hole.git"
-readonly PI_HOLE_FILES_DIR="/etc/.pihole"
+readonly PI_HOLE_FILES_DIR="/opt/etc/.pihole"
 
 # shellcheck disable=SC2034
 SKIP_INSTALL=true
@@ -25,7 +25,7 @@ CHECK_ONLY=false
 # shellcheck disable=SC1090
 source "${PI_HOLE_FILES_DIR}/automated install/basic-install.sh"
 # shellcheck disable=SC1091
-source "/opt/pihole/COL_TABLE"
+source "/opt/share/pihole/COL_TABLE"
 
 # is_repo() sourced from basic-install.sh
 # make_repo() sourced from basic-install.sh
@@ -168,8 +168,8 @@ main() {
 
     # Determine FTL branch
     local ftlBranch
-    if [[ -f "/etc/pihole/ftlbranch" ]]; then
-        ftlBranch=$(</etc/pihole/ftlbranch)
+    if [[ -f "/opt/etc/pihole/ftlbranch" ]]; then
+        ftlBranch=$(</opt/etc/pihole/ftlbranch)
     else
         ftlBranch="master"
     fi
@@ -217,7 +217,7 @@ main() {
 
     if [[ "${FTL_update}" == true || "${core_update}" == true || "${web_update}" == true ]]; then
         # Update local and remote versions via updatechecker
-        /opt/pihole/updatecheck.sh
+        /opt/share/pihole/updatecheck.sh
         echo -e "  ${INFO} Local version file information updated."
     fi
 
diff --git a/advanced/Scripts/updatecheck.sh b/advanced/Scripts/updatecheck.sh
index eda6c40..6842d4e 100755
--- a/advanced/Scripts/updatecheck.sh
+++ b/advanced/Scripts/updatecheck.sh
@@ -40,15 +40,15 @@ function get_remote_hash() {
 
 # Source the utils file for addOrEditKeyValPair()
 # shellcheck disable=SC1091
-. /opt/pihole/utils.sh
+. /opt/share/pihole/utils.sh
 
 # Remove the below three legacy files if they exist
-rm -f "/etc/pihole/GitHubVersions"
-rm -f "/etc/pihole/localbranches"
-rm -f "/etc/pihole/localversions"
+rm -f "/opt/etc/pihole/GitHubVersions"
+rm -f "/opt/etc/pihole/localbranches"
+rm -f "/opt/etc/pihole/localversions"
 
 # Create new versions file if it does not exist
-VERSION_FILE="/etc/pihole/versions"
+VERSION_FILE="/opt/etc/pihole/versions"
 touch "${VERSION_FILE}"
 chmod 644 "${VERSION_FILE}"
 
@@ -67,13 +67,13 @@ fi
 
 # get Core versions
 
-CORE_VERSION="$(get_local_version /etc/.pihole)"
+CORE_VERSION="$(get_local_version /opt/etc/.pihole)"
 addOrEditKeyValPair "${VERSION_FILE}" "CORE_VERSION" "${CORE_VERSION}"
 
-CORE_BRANCH="$(get_local_branch /etc/.pihole)"
+CORE_BRANCH="$(get_local_branch /opt/etc/.pihole)"
 addOrEditKeyValPair "${VERSION_FILE}" "CORE_BRANCH" "${CORE_BRANCH}"
 
-CORE_HASH="$(get_local_hash /etc/.pihole)"
+CORE_HASH="$(get_local_hash /opt/etc/.pihole)"
 addOrEditKeyValPair "${VERSION_FILE}" "CORE_HASH" "${CORE_HASH}"
 
 GITHUB_CORE_VERSION="$(get_remote_version pi-hole "${CORE_BRANCH}")"
@@ -84,13 +84,13 @@ addOrEditKeyValPair "${VERSION_FILE}" "GITHUB_CORE_HASH" "${GITHUB_CORE_HASH}"
 
 # get Web versions
 
-WEB_VERSION="$(get_local_version /var/www/html/admin)"
+WEB_VERSION="$(get_local_version /opt/share/pihole/www/admin)"
 addOrEditKeyValPair "${VERSION_FILE}" "WEB_VERSION" "${WEB_VERSION}"
 
-WEB_BRANCH="$(get_local_branch /var/www/html/admin)"
+WEB_BRANCH="$(get_local_branch /opt/share/pihole/www/admin)"
 addOrEditKeyValPair "${VERSION_FILE}" "WEB_BRANCH" "${WEB_BRANCH}"
 
-WEB_HASH="$(get_local_hash /var/www/html/admin)"
+WEB_HASH="$(get_local_hash /opt/share/pihole/www/admin)"
 addOrEditKeyValPair "${VERSION_FILE}" "WEB_HASH" "${WEB_HASH}"
 
 GITHUB_WEB_VERSION="$(get_remote_version web "${WEB_BRANCH}")"
diff --git a/advanced/Scripts/utils.sh b/advanced/Scripts/utils.sh
index 2fe419e..255ab3b 100755
--- a/advanced/Scripts/utils.sh
+++ b/advanced/Scripts/utils.sh
@@ -85,8 +85,8 @@ removeKey() {
 # returns path of FTL's PID  file
 #######################
 getFTLPIDFile() {
-  local FTLCONFFILE="/etc/pihole/pihole-FTL.conf"
-  local DEFAULT_PID_FILE="/run/pihole-FTL.pid"
+  local FTLCONFFILE="/opt/etc/pihole/pihole-FTL.conf"
+  local DEFAULT_PID_FILE="/opt/var/run/pihole-FTL.pid"
   local FTL_PID_FILE
 
   if [ -s "${FTLCONFFILE}" ]; then
diff --git a/advanced/Scripts/version.sh b/advanced/Scripts/version.sh
index 2b0883a..f1f2fa2 100755
--- a/advanced/Scripts/version.sh
+++ b/advanced/Scripts/version.sh
@@ -13,13 +13,13 @@
 # https://github.com/koalaman/shellcheck/wiki/SC3043#exceptions
 
 # Source the versions file poupulated by updatechecker.sh
-cachedVersions="/etc/pihole/versions"
+cachedVersions="/opt/etc/pihole/versions"
 
 if [ -f ${cachedVersions} ]; then
     # shellcheck disable=SC1090
     . "$cachedVersions"
 else
-    echo "Could not find /etc/pihole/versions. Running update now."
+    echo "Could not find /opt/etc/pihole/versions. Running update now."
     pihole updatechecker
     # shellcheck disable=SC1090
     . "$cachedVersions"
diff --git a/advanced/Templates/gravity_copy.sql b/advanced/Templates/gravity_copy.sql
index ed11b61..b27bd6e 100644
--- a/advanced/Templates/gravity_copy.sql
+++ b/advanced/Templates/gravity_copy.sql
@@ -1,6 +1,6 @@
 .timeout 30000
 
-ATTACH DATABASE '/etc/pihole/gravity.db' AS OLD;
+ATTACH DATABASE '/opt/etc/pihole/gravity.db' AS OLD;
 
 BEGIN TRANSACTION;
 
diff --git a/advanced/Templates/logrotate b/advanced/Templates/logrotate
index 5f609e0..36203f7 100644
--- a/advanced/Templates/logrotate
+++ b/advanced/Templates/logrotate
@@ -1,4 +1,4 @@
-/var/log/pihole/pihole.log {
+/opt/var/log/pihole/pihole.log {
     # su #
     daily
     copytruncate
@@ -9,7 +9,7 @@
     nomail
 }
 
-/var/log/pihole/FTL.log {
+/opt/var/log/pihole/FTL.log {
     # su #
     weekly
     copytruncate
@@ -20,7 +20,7 @@
     nomail
 }
 
-/var/log/pihole/webserver.log {
+/opt/var/log/pihole/webserver.log {
     # su #
     weekly
     copytruncate
diff --git a/advanced/Templates/pihole-FTL-poststop.sh b/advanced/Templates/pihole-FTL-poststop.sh
index ac3898d..5abfc86 100755
--- a/advanced/Templates/pihole-FTL-poststop.sh
+++ b/advanced/Templates/pihole-FTL-poststop.sh
@@ -1,7 +1,7 @@
 #!/usr/bin/env sh
 
 # Source utils.sh for getFTLPIDFile()
-PI_HOLE_SCRIPT_DIR='/opt/pihole'
+PI_HOLE_SCRIPT_DIR='/opt/share/pihole'
 utilsfile="${PI_HOLE_SCRIPT_DIR}/utils.sh"
 # shellcheck disable=SC1090
 . "${utilsfile}"
@@ -10,4 +10,4 @@ utilsfile="${PI_HOLE_SCRIPT_DIR}/utils.sh"
 FTL_PID_FILE="$(getFTLPIDFile)"
 
 # Cleanup
-rm -f /run/pihole/FTL.sock /dev/shm/FTL-* "${FTL_PID_FILE}"
+rm -f /opt/var/run/pihole/FTL.sock /dev/shm/FTL-* "${FTL_PID_FILE}"
diff --git a/advanced/Templates/pihole-FTL-prestart.sh b/advanced/Templates/pihole-FTL-prestart.sh
index c681782..a28b200 100755
--- a/advanced/Templates/pihole-FTL-prestart.sh
+++ b/advanced/Templates/pihole-FTL-prestart.sh
@@ -1,7 +1,7 @@
 #!/usr/bin/env sh
 
 # Source utils.sh for getFTLPIDFile()
-PI_HOLE_SCRIPT_DIR='/opt/pihole'
+PI_HOLE_SCRIPT_DIR='/opt/share/pihole'
 utilsfile="${PI_HOLE_SCRIPT_DIR}/utils.sh"
 # shellcheck disable=SC1090
 . "${utilsfile}"
@@ -11,36 +11,36 @@ FTL_PID_FILE="$(getFTLPIDFile)"
 
 # Ensure that permissions are set so that pihole-FTL can edit all necessary files
 # shellcheck disable=SC2174
-mkdir -pm 0640 /var/log/pihole
-chown -R pihole:pihole /etc/pihole /var/log/pihole
-chmod -R 0640 /var/log/pihole
-chmod -R 0660 /etc/pihole
+mkdir -pm 0640 /opt/var/log/pihole
+chown -R pihole:pihole /opt/etc/pihole /opt/var/log/pihole
+chmod -R 0640 /opt/var/log/pihole
+chmod -R 0660 /opt/etc/pihole
 
 # Logrotate config file need to be owned by root and must not be writable by group and others
-chown root:root /etc/pihole/logrotate
-chmod 0644 /etc/pihole/logrotate
+chown root:root /opt/etc/pihole/logrotate
+chmod 0644 /opt/etc/pihole/logrotate
 
 # allow all users to enter the directories
-chmod 0755 /etc/pihole /var/log/pihole
+chmod 0755 /opt/etc/pihole /opt/var/log/pihole
 
 # allow pihole to access subdirs in /etc/pihole (sets execution bit on dirs)
 # credits https://stackoverflow.com/a/11512211
-find /etc/pihole -type d -exec chmod 0755 {} \;
+find /opt/etc/pihole -type d -exec chmod 0755 {} \;
 
 # Touch files to ensure they exist (create if non-existing, preserve if existing)
 [ -f "${FTL_PID_FILE}" ] || install -D -m 644 -o pihole -g pihole /dev/null "${FTL_PID_FILE}"
-[ -f /var/log/pihole/FTL.log ] || install -m 640 -o pihole -g pihole /dev/null /var/log/pihole/FTL.log
-[ -f /var/log/pihole/pihole.log ] || install -m 640 -o pihole -g pihole /dev/null /var/log/pihole/pihole.log
-[ -f /etc/pihole/dhcp.leases ] || install -m 644 -o pihole -g pihole /dev/null /etc/pihole/dhcp.leases
+[ -f /opt/var/log/pihole/FTL.log ] || install -m 640 -o pihole -g pihole /dev/null /opt/var/log/pihole/FTL.log
+[ -f /opt/var/log/pihole/pihole.log ] || install -m 640 -o pihole -g pihole /dev/null /opt/var/log/pihole/pihole.log
+[ -f /opt/etc/pihole/dhcp.leases ] || install -m 644 -o pihole -g pihole /dev/null /opt/etc/pihole/dhcp.leases
 
 
 # Backward compatibility for user-scripts that still expect log files in /var/log instead of /var/log/pihole
 # Should be removed with Pi-hole v6.0
-if [ ! -f /var/log/pihole.log ]; then
-    ln -sf /var/log/pihole/pihole.log /var/log/pihole.log
-    chown -h pihole:pihole /var/log/pihole.log
+if [ ! -f /opt/var/log/pihole.log ]; then
+    ln -sf /opt/var/log/pihole/pihole.log /opt/var/log/pihole.log
+    chown -h pihole:pihole /opt/var/log/pihole.log
 fi
-if [ ! -f /var/log/pihole-FTL.log ]; then
-    ln -sf /var/log/pihole/FTL.log /var/log/pihole-FTL.log
-    chown -h pihole:pihole /var/log/pihole-FTL.log
+if [ ! -f /opt/var/log/pihole-FTL.log ]; then
+    ln -sf /opt/var/log/pihole/FTL.log /opt/var/log/pihole-FTL.log
+    chown -h pihole:pihole /opt/var/log/pihole-FTL.log
 fi
diff --git a/advanced/Templates/pihole.cron b/advanced/Templates/pihole.cron
index c62d31a..403ffe9 100644
--- a/advanced/Templates/pihole.cron
+++ b/advanced/Templates/pihole.cron
@@ -18,16 +18,16 @@
 #          early morning. Download any updates from the adlists
 #          Squash output to log, then splat the log to stdout on error to allow for
 #          standard crontab job error handling.
-59 1    * * 7   root    PATH="$PATH:/usr/sbin:/usr/local/bin/" pihole updateGravity >/var/log/pihole/pihole_updateGravity.log || cat /var/log/pihole/pihole_updateGravity.log
+59 1    * * 7   root    PATH="$PATH:/opt/sbin:/opt/bin/" pihole updateGravity >/opt/var/log/pihole/pihole_updateGravity.log || cat /opt/var/log/pihole/pihole_updateGravity.log
 
 # Pi-hole: Flush the log daily at 00:00
 #          The flush script will use logrotate if available
 #          parameter "once": logrotate only once (default is twice)
 #          parameter "quiet": don't print messages
-00 00   * * *   root    PATH="$PATH:/usr/sbin:/usr/local/bin/" pihole flush once quiet
+00 00   * * *   root    PATH="$PATH:/opt/sbin:/opt/bin/" pihole flush once quiet
 
-@reboot root /usr/sbin/logrotate --state /var/lib/logrotate/pihole /etc/pihole/logrotate
+@reboot root /opt/sbin/logrotate --state /opt/etc/pihole/logrotate.state /opt/etc/pihole/logrotate
 
 # Pi-hole: Grab remote and local version every 24 hours
-59 17  * * *   root    PATH="$PATH:/usr/sbin:/usr/local/bin/" pihole updatechecker
-@reboot root    PATH="$PATH:/usr/sbin:/usr/local/bin/" pihole updatechecker reboot
+59 17  * * *   root    PATH="$PATH:/opt/sbin:/opt/bin/" pihole updatechecker
+@reboot root    PATH="$PATH:/opt/sbin:/opt/bin/" pihole updatechecker reboot
diff --git a/gravity.sh b/gravity.sh
index 522d92f..8b25510 100755
--- a/gravity.sh
+++ b/gravity.sh
@@ -13,7 +13,7 @@
 
 export LC_ALL=C
 
-PI_HOLE_SCRIPT_DIR="/opt/pihole"
+PI_HOLE_SCRIPT_DIR="/opt/share/pihole"
 # Source utils.sh for GetFTLConfigValue
 utilsfile="${PI_HOLE_SCRIPT_DIR}/utils.sh"
 # shellcheck disable=SC1090
@@ -23,12 +23,12 @@ coltable="${PI_HOLE_SCRIPT_DIR}/COL_TABLE"
 # shellcheck disable=SC1090
 . "${coltable}"
 # shellcheck disable=SC1091
-. "/etc/.pihole/advanced/Scripts/database_migration/gravity-db.sh"
+. "/opt/share/pihole/database_migration/gravity-db.sh"
 
 basename="pihole"
-PIHOLE_COMMAND="/usr/local/bin/${basename}"
+PIHOLE_COMMAND="/opt/bin/${basename}"
 
-piholeDir="/etc/${basename}"
+piholeDir="/opt/etc/${basename}"
 
 # Legacy (pre v5.0) list file locations
 whitelistFile="${piholeDir}/whitelist.txt"
@@ -36,25 +36,25 @@ blacklistFile="${piholeDir}/blacklist.txt"
 regexFile="${piholeDir}/regex.list"
 adListFile="${piholeDir}/adlists.list"
 
-piholeGitDir="/etc/.pihole"
+piholeGitDir="/opt/share/pihole"
 GRAVITYDB=$(getFTLConfigValue files.gravity)
 GRAVITY_TMPDIR=$(getFTLConfigValue files.gravity_tmp)
-gravityDBschema="${piholeGitDir}/advanced/Templates/gravity.db.sql"
-gravityDBcopy="${piholeGitDir}/advanced/Templates/gravity_copy.sql"
+gravityDBschema="${piholeGitDir}/gravity.db.sql"
+gravityDBcopy="${piholeGitDir}/gravity_copy.sql"
 
 domainsExtension="domains"
 curl_connect_timeout=10
 
 # Check gravity temp directory
 if [ ! -d "${GRAVITY_TMPDIR}" ] || [ ! -w "${GRAVITY_TMPDIR}" ]; then
-  echo -e "  ${COL_LIGHT_RED}Gravity temporary directory does not exist or is not a writeable directory, falling back to /tmp. ${COL_NC}"
-  GRAVITY_TMPDIR="/tmp"
+  echo -e "  ${COL_LIGHT_RED}Gravity temporary directory does not exist or is not a writeable directory, falling back to /opt/tmp. ${COL_NC}"
+  GRAVITY_TMPDIR="/opt/tmp"
 fi
 
 # Set this only after sourcing pihole-FTL.conf as the gravity database path may
 # have changed
 gravityDBfile="${GRAVITYDB}"
-gravityDBfile_default="/etc/pihole/gravity.db"
+gravityDBfile_default="/opt/etc/pihole/gravity.db"
 gravityTEMPfile="${GRAVITYDB}_temp"
 gravityDIR="$(dirname -- "${gravityDBfile}")"
 gravityOLDfile="${gravityDIR}/gravity_old.db"
@@ -940,7 +940,7 @@ if [[ "${forceDelete:-}" == true ]]; then
   str="Deleting existing list cache"
   echo -ne "${INFO} ${str}..."
 
-  rm /etc/pihole/list.* 2>/dev/null || true
+  rm /opt/etc/pihole/list.* 2>/dev/null || true
   echo -e "${OVER}  ${TICK} ${str}"
 fi
 
diff --git a/pihole b/pihole
index 7c84771..d1c1a2d 100755
--- a/pihole
+++ b/pihole
@@ -9,12 +9,12 @@
 # This file is copyright under the latest version of the EUPL.
 # Please see LICENSE file for your rights under this license.
 
-readonly PI_HOLE_SCRIPT_DIR="/opt/pihole"
+readonly PI_HOLE_SCRIPT_DIR="/opt/share/pihole"
 
 # PI_HOLE_BIN_DIR is not readonly here because in some functions (checkout),
 # they might get set again when the installer is sourced. This causes an
 # error due to modifying a readonly variable.
-PI_HOLE_BIN_DIR="/usr/local/bin"
+PI_HOLE_BIN_DIR="/opt/bin"
 
 readonly colfile="${PI_HOLE_SCRIPT_DIR}/COL_TABLE"
 source "${colfile}"
@@ -22,7 +22,7 @@ source "${colfile}"
 utilsfile="${PI_HOLE_SCRIPT_DIR}/utils.sh"
 source "${utilsfile}"
 
-versionsfile="/etc/pihole/versions"
+versionsfile="/opt/etc/pihole/versions"
 if [ -f "${versionsfile}" ]; then
     # Only source versionsfile if the file exits
     # fixes a warning during installation where versionsfile does not exist yet
@@ -109,7 +109,7 @@ reconfigurePiholeFunc() {
   if [ -n "${DOCKER_VERSION}" ]; then
     unsupportedFunc
   else
-    /etc/.pihole/automated\ install/basic-install.sh --reconfigure
+    /opt/share/pihole/basic-install.sh --reconfigure
     exit 0;
   fi
 }
@@ -284,9 +284,9 @@ Example: 'pihole logging on'
 Specify whether the Pi-hole log should be used
 
 Options:
-  on                  Enable the Pi-hole log at /var/log/pihole/pihole.log
-  off                 Disable and flush the Pi-hole log at /var/log/pihole/pihole.log
-  off noflush         Disable the Pi-hole log at /var/log/pihole/pihole.log"
+  on                  Enable the Pi-hole log at /opt/var/log/pihole/pihole.log
+  off                 Disable and flush the Pi-hole log at /opt/var/log/pihole/pihole.log
+  off noflush         Disable the Pi-hole log at /opt/var/log/pihole/pihole.log"
     exit 0
   elif [[ "${1}" == "off" ]]; then
     # Disable logging
@@ -391,7 +391,7 @@ exit 0
 
 tailFunc() {
   # Warn user if Pi-hole's logging is disabled
-  local logging_enabled=$(grep -c "^log-queries" /etc/dnsmasq.d/01-pihole.conf)
+  local logging_enabled=$(grep -c "^log-queries" /opt/etc/dnsmasq.d/01-pihole.conf)
   if [[ "${logging_enabled}" == "0" ]]; then
     # No "log-queries" lines are found.
     # Commented out lines (such as "#log-queries") are ignored
@@ -403,7 +403,7 @@ tailFunc() {
   # Color blocklist/blacklist/wildcard entries as red
   # Color A/AAAA/DHCP strings as white
   # Color everything else as gray
-  tail -f /var/log/pihole/pihole.log | grep --line-buffered "${1}" | sed -E \
+  tail -f /opt/var/log/pihole/pihole.log | grep --line-buffered "${1}" | sed -E \
     -e "s,($(date +'%b %d ')| dnsmasq\[[0-9]*\]),,g" \
     -e "s,(.*(blacklisted |gravity blocked ).*),${COL_RED}&${COL_NC}," \
     -e "s,.*(query\\[A|DHCP).*,${COL_NC}&${COL_NC}," \
