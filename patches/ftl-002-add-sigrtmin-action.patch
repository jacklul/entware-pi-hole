diff --git a/src/args.c b/src/args.c
index 363da394..02d6ae2f 100644
--- a/src/args.c
+++ b/src/args.c
@@ -219,6 +219,10 @@ void parse_args(int argc, char *argv[])
 	if(argc == 2 && strcmp(argv[1], "sigtest") == 0)
 		exit(sigtest());
 
+	// Print SIGRTMIN value (for use with pihole reload-lists)
+	if(argc == 2 && strcmp(argv[1], "sigrtmin") == 0)
+		exit(sigrtmin());
+
 	// If the binary name is "sqlite3"  (e.g., symlink /usr/bin/sqlite3 -> /usr/bin/pihole-FTL),
 	// we operate in drop-in mode and consume all arguments for the embedded SQLite3 engine
 	// Also, we do this if the first argument is a file with ".db" ending
diff --git a/src/signals.c b/src/signals.c
index 92ebb511..ef67a4d5 100644
--- a/src/signals.c
+++ b/src/signals.c
@@ -533,6 +533,12 @@ int sigtest(void)
 	return EXIT_SUCCESS;
 }
 
+int sigrtmin(void)
+{
+	printf("%d\n", SIGRTMIN);
+	return EXIT_SUCCESS;
+}
+
 void restart_ftl(const char *reason)
 {
 	log_info("Restarting FTL: %s", reason);
diff --git a/src/signals.h b/src/signals.h
index 64dc396c..61b5e8b1 100644
--- a/src/signals.h
+++ b/src/signals.h
@@ -24,6 +24,7 @@ pid_t main_pid(void);
 void thread_sleepms(const enum thread_types thread, const int milliseconds);
 void generate_backtrace(void);
 int sigtest(void);
+int sigrtmin(void);
 void restart_ftl(const char *reason);
 pid_t debugger(void);
 
