diff --git a/src/api/docs/content/specs/info.yaml b/src/api/docs/content/specs/info.yaml
index 6be2b1ac..dab9526e 100644
--- a/src/api/docs/content/specs/info.yaml
+++ b/src/api/docs/content/specs/info.yaml
@@ -1066,6 +1066,24 @@ components:
                   nullable: true
                   description: Remote (Docker Hub) Pi-hole Docker image version (`null` if not running in Docker)
                   example: "v6.1"
+            entware:
+              type: object
+              properties:
+                local:
+                  type: string
+                  nullable: true
+                  description: Local Pi-hole Entware package version (`null` if not running Entware)
+                  example: "v6.1"
+                remote:
+                  type: string
+                  nullable: true
+                  description: Remote Pi-hole Entware package version (`null` if not running Entware)
+                  example: "v6.1"
+                branch:
+                  type: string
+                  nullable: true
+                  description: Local Pi-hole Entware package name
+                  example: "pi-hole"
     messages:
       type: object
       properties:
diff --git a/src/api/info.c b/src/api/info.c
index 9a690d31..7d1bfbe5 100644
--- a/src/api/info.c
+++ b/src/api/info.c
@@ -751,6 +751,7 @@ int get_version_obj(struct ftl_conn *api, cJSON *version)
 	cJSON *web_remote = JSON_NEW_OBJECT();
 	cJSON *ftl_remote = JSON_NEW_OBJECT();
 	cJSON *docker = JSON_NEW_OBJECT();
+	cJSON *entware = JSON_NEW_OBJECT();
 
 	FILE *fp = fopen(VERSIONS_FILE, "r");
 	if(!fp)
@@ -816,6 +817,12 @@ int get_version_obj(struct ftl_conn *api, cJSON *version)
 			JSON_COPY_STR_TO_OBJECT(docker, "local", value);
 		else if(strcmp(key, "GITHUB_DOCKER_VERSION") == 0)
 			JSON_COPY_STR_TO_OBJECT(docker, "remote", value);
+		else if(strcmp(key, "ENTWARE_VERSION") == 0)
+			JSON_COPY_STR_TO_OBJECT(entware, "local", value);
+		else if(strcmp(key, "GITHUB_ENTWARE_VERSION") == 0)
+			JSON_COPY_STR_TO_OBJECT(entware, "remote", value);
+		else if(strcmp(key, "ENTWARE_PACKAGE") == 0)
+			JSON_COPY_STR_TO_OBJECT(entware, "branch", value);
 	}
 
 	// Free allocated memory and release file pointer
@@ -862,6 +869,12 @@ int get_version_obj(struct ftl_conn *api, cJSON *version)
 	JSON_ADD_NULL_IF_NOT_EXISTS(docker, "remote");
 	JSON_ADD_ITEM_TO_OBJECT(version, "docker", docker);
 
+	// Add nulls to entware if we didn't find any version
+	JSON_ADD_NULL_IF_NOT_EXISTS(entware, "local");
+	JSON_ADD_NULL_IF_NOT_EXISTS(entware, "remote");
+	JSON_ADD_NULL_IF_NOT_EXISTS(entware, "branch");
+	JSON_ADD_ITEM_TO_OBJECT(version, "entware", entware);
+
 	return 0;
 }
 
